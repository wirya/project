<?php
$addAnExternalApi = new Form('addAApi', array(
    'view' => 'Module:apis/control/settings/apis/external-apis/add-a-api',
    'controller' => 'Module:apis/ApisForms',
    'function' => 'addAnExternalApi',
    'submitButtonText' => 'Add API',
    'style' => 'width: 600px;',
));

$addAnExternalApiSection = new FormSection('api', array());

// Build the instance options
$instances = array();
foreach(Project::getInstances() as $instance) {
    $instances[] = array('label' => $instance['id'].' ('.$instance['host'].$instance['accessPath'].')', 'value' => $instance['id']);
}

$addAnExternalApiSection->addFormComponentArray(array(
    new FormComponentDropDown('apiType', 'Api type:', array(
            array('label' => 'MySql', 'value' => 'MySql'),
        ), array(
            'validationOptions' => array('required'),
        )
    ),
    new FormComponentSingleLineText('apiName', 'API name:', array(
        'validationOptions' => array('required'),
        'initialValue' => '',
    )),
    new FormComponentSingleLineText('apiPort', 'Api port:', array(
        'validationOptions' => array('required'),
        'initialValue' => '3306',
        'width' => 'short',
    )),
    new FormComponentSingleLineText('apiName', 'Api name:', array(
        'validationOptions' => array('required'),
    )),
    new FormComponentSingleLineText('apiUsername', 'Api username:', array(
        'validationOptions' => array('required'),
    )),
    new FormComponentSingleLineText('apiPassword', 'Api password:', array(
        'validationOptions' => array('required', 'password'),
        'type' => 'password',
    )),
    new FormComponentSingleLineText('modelPath', 'Model path:', array(
    )),
    new FormComponentMultipleChoice('globalContext', '', array(
            array('value' => 'Yes', 'label' => 'This api is the global context for all models', 'checked' => true)
        ),
        array(
            'tip' => '<p>The global context is the default api each model generated by the models module will use (if not explicitly set).</p>',
        )
    ),
    new FormComponentMultipleChoice('allInstances', '', array(
            array('value' => 'Yes', 'label' => 'This api is accessible by all instances', 'checked' => true)
        ),
        array(
        )
    ),
    new FormComponentMultipleChoice('instances', 'This api is only accessible by these instances:', $instances, array(
        'forceLabel' => true,
        'dependencyOptions' => array(
            'display' => 'hide',
            'dependentOn' => array('allInstances'),
            'jsFunction' => "!$('#allInstances-choice1').is(':checked');",
        ),
    )),
));

// Load the initial values for the data section
/*
$dataInitialValues = array();
if(isset($route['data']) && Arr::is($route['data'])) {
    foreach($route['data'] as $index => $keyValue) {
        $dataInitialValues[] = array('key' => $keyValue['key'], 'value' => $keyValue['value']);
    }
}

$dataSection = new FormSection('data', array(
    'title' => '<h3>Data</h3>',
    'instanceOptions' => array(
        'max' => 0,
        'initialValues' => $dataInitialValues,
    ),
    'dependencyOptions' => array(
        'display' => 'hide',
        'dependentOn' => array('redirectOn'),
        'jsFunction' => "!$('#redirectOn-choice1').is(':checked');",
    ),
));
$dataSection->addFormComponentArray(array(
    new FormComponentSingleLineText('key', 'Key:', array(
    )),
    new FormComponentSingleLineText('value', 'Value:', array(
    )),
));
$addChildRoute->addFormSection($dataSection);*/

$addAnExternalApi->addFormSection($addAnExternalApiSection);
?>